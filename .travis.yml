language: python

env:
 global:
  - HELM_URL=https://storage.googleapis.com/kubernetes-helm
  - HELM_TGZ=helm-v2.4.1-linux-amd64.tar.gz
  - TARGET_BR=feature/repo_test

install:
  # Installing Helm
  - wget -q ${HELM_URL}/${HELM_TGZ}
  - tar xzfv ${HELM_TGZ}
  - PATH=`pwd`/linux-amd64/:$PATH
  - helm init --client-only

before_script:
  # Decrypt key
  - >
    openssl aes-256-cbc
    -K $encrypted_1f5633e62941_key
    -iv $encrypted_1f5633e62941_iv
    -in .ssh-keys/travis.enc
    -out .ssh-keys/travis
    -d

  # Add the keypair to the agent
  - chmod 600 .ssh-keys/travis
  - eval "$(ssh-agent -s)"
  - ssh-add .ssh-keys/travis

script:
  # Current dir and temporary dir for storing new packaged charts and index files
  - REPO_DIR=/home/travis/build/kubenow/helm-charts
  - BUILD_DIR=$(mktemp -d)

  # Useful URLs
  - REPO_URL=`git config remote.origin.url`
  - SSH_REPO=${REPO_URL/https:\/\/github.com\//git@github.com:}
  - SHA=`git rev-parse --verify HEAD`

  # Push temporary directory to the stack
  - pushd $BUILD_DIR

  # Iterate over all charts are package them
  - for dir in `ls ${REPO_DIR}/charts`; do
    helm dep update ${REPO_DIR}/charts/$dir;
    helm package ${REPO_DIR}/charts/$dir;
    done

  # Indexing of charts
  - if [ -f index.yaml ]; then
    helm repo index --url ${REPO_URL} --merge index.yaml .;
    else
    helm repo index --url ${REPO_URL} .;
    fi

  # Pop temporary directory from the stack
  - popd
  
  - ls ${BUILD_DIR}

  # Clone repository and empty target branch
  - git clone ${REPO_URL} out
  - cd out
  - git checkout ${TARGET_BR} || git checkout --orphan ${TARGET_BR}
  - cd ..
  - rm -rf out/* || exit 0

  # Push new contents upstream
  - cp $BUILD_DIR/* out/
  - cd out

  # Cjeck for changes
  - if [ git diff --quiet ]; then
    echo "No changes, exiting.";
    exit 0;
    fi

  # Add all new files to staging phase and commit the changes
  - git config user.name "Travis CI"
  - git config user.email "travis@travis-ci.org"
  - git add -A .
  - git status
  - git commit -m "Deploy to test repository ${SHA}"

  # We can push.
  - git push ${SSH_REPO} ${TARGET_BRANCH}